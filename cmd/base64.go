package main

import (
	"bufio"
	"encoding/base64"
	"fmt"
	"io/ioutil"
	"os"
)

func main() {
	src := []byte(fmt.Sprintf(
		"// DO NOT EDIT! This file is generated by `cmd/base64.go`\n// Please edit `cmd/favicon.ico` or `cmd/logo.png` & then rebuild Triumph Challenge.\n// Read `cmd/README.md` for further details.\npackage main\n\nconst (\n\tfaviconB64 = \"%s\"\n\tlogoB64 = \"%s\"\n)\n",
		"data:image/x-icon;"+base64File("favicon.ico"),
		"data:image/x-png;"+base64File("logo.png"),
	))

	err := ioutil.WriteFile("favicon.go", src, 0600)
	if err != nil {
		fmt.Println(err)
	}
}

func base64File(path string) string {
	// Open file on disk.
	//nolint:gosec // The path provided is hardcoded.
	f, err := os.Open(path)
	if err != nil {
		fmt.Println(err)
	}

	var src []byte

	// Read entire image into byte slice.
	src, err = ioutil.ReadAll(bufio.NewReader(f))
	if err != nil {
		fmt.Println(err)
	}

	// Base64 encode image.
	return "base64," + base64.StdEncoding.EncodeToString(src)
}
